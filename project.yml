title: Training pipeline for Ancient Greek Language Model
description: >
  Reproducible workflows for training the ancient greek spaCy pipeline.

vars:
  lang: "grc"
  config_trf: "transformer"
  config_sm: "sm"
  model_name_sm: "grc_homercy_treebanks_sm"
  model_name_trf: "grc_homercy_treebanks_trf"
  package_name_sm: "homercy_treebanks_sm"
  package_name_trf: "homercy_treebanks_trf"
  training_corpus: "joint"
  gpu: 0
  package_version: "0.0.0"
  spacy_version: ">=3.4.0"

directories: ["assets", "corpus", "training", "scripts"]

workflows:
  preprocess:
    - install
    - fetch_assets
    - prepare
  train_evaluate_sm:
    - train_sm
    - evaluate_sm
  train_evaluate_trf:
    - train_trf
    - evaluate_trf
  package_push_sm:
    - package_sm
    - push_sm
  package_push_trf:
    - package_trf
    - push_trf
  all_sm:
    - install
    - fetch_assets
    - prepare
    - train_sm
    - evaluate_sm
    - package_sm
    - push_sm
  all_trf:
    - install
    - fetch_assets
    - prepare
    - train_trf
    - evaluate_trf
    - package_trf
    - push_trf

commands:
  # Installation
  - name: install
    help: "Creating environments and installing dependencies"
    script:
      - "bash scripts/create_environments.sh"
    deps:
      - "requirements_preprocessing.txt"
      - "requirements_training.txt"
      - "requirements_packaging.txt"
  # Fetching assets
  - name: fetch_assets
    help: Fetches treebanks, pretraining corpus and named entity assets.
    script:
      - "bash scripts/fetch_treebanks.sh"
      - "bash scripts/clean_treebanks.sh"
      - "bash scripts/fetch_pretraining.sh"
      - "bash scripts/clean_pretraining.sh"
      - "bash scripts/fetch_named_entities.sh"
      - "bash scripts/clean_named_entities.sh"
  # Preprocessing assets for training
  - name: prepare
    help: "Prepares assets for training"
    script:
      - "bash scripts/prepare.sh"

  # Training scripts
  - name: train_sm
    help: "Trains a sm model over the dataset"
    script:
      - "bash scripts/training.sh ${vars.config_sm} ${vars.model_name_sm} ${vars.corpus}"
    deps:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "configs/${vars.config_sm}.cfg"
    outputs:
      - "training/${vars.model_name_sm}"

  - name: train_trf
    help: "Finetunes the Bert based transformer model on the treebanks"
    script:
      - "bash scripts/training.sh ${vars.config_trf} ${vars.model_name_trf} ${vars.corpus}"
    deps:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "configs/${vars.config_trf}.cfg"
    outputs:
      - "training/${vars.model_name_trf}"

  - name: evaluate_sm
    help: "Evaluate the sm model on test data & save the metrics"
    script:
      - ". environments/training/bin/activate"
      - "python3 -m spacy evaluate training/${vars.model_name_sm}/model-best corpus/test.spacy --output metrics/${vars.model_name_sm}_${vars.package_version}_model-best.json"
      - "python3 -m spacy evaluate training/${vars.model_name_sm}/model-last corpus/test.spacy --output metrics/${vars.model_name_sm}_${vars.package_version}_model-last.json"
      - "deactivate"
    deps:
      - "training/${vars.model_name_sm}"
      - "corpus/test.spacy"
    outputs:
      - "metrics/${vars.model_name_sm}_${vars.package_version}_model-best.json"
      - "metrics/${vars.model_name_sm}_${vars.package_version}_model-last.json"

  - name: evaluate_trf
    help: "Evaluate the Bert based transformer model on test data & save the metrics"
    script:
      - ". environments/training/bin/activate"
      - "python3 -m spacy evaluate training/${vars.model_name_trf}/model-best corpus/test.spacy --output metrics/${vars.model_name_trf}_${vars.package_version}_model-best.json --gpu-id 0"
      - "python3 -m spacy evaluate training/${vars.model_name_trf}/model-last corpus/test.spacy --output metrics/${vars.model_name_trf}_${vars.package_version}_model-last.json --gpu-id 0"
      - "deactivate"
    deps:
      - "training/${vars.model_name_trf}"
      - "corpus/test.spacy"
    outputs:
      - "metrics/${vars.model_name_trf}_${vars.package_version}.json"
  # Packaging and pushing to online repositories
  - name: package_trf
    help: "Packages Transformer model into a Python wheel"
    script:
      - ". environments/packaging/bin/activate"
      - "mkdir -p packages"
      - "python3 -m spacy package training/${vars.model_name_trf}/model-best packages/ --build wheel --name ${vars.package_name_trf}"
      - "deactivate"

  - name: package_sm
    help: "Packages small model into a Python wheel"
    script:
      - ". environments/packaging/bin/activate"
      - "mkdir -p packages"
      - "python3 -m spacy package training/${vars.model_name_sm}/model-best packages/ --build wheel --name ${vars.package_name_sm}"
      - "deactivate"

  - name: "push_trf"
    help: "Pushes transformer model to Huggingface repository"
    script:
      - ". environments/packaging/bin/activate"
      - "huggingface-cli login"
      - "python3 -m spacy huggingface-hub push packages/${vars.lang}_${vars.package_name_trf}-${vars.package_version}/dist/${vars.lang}_${vars.package_name_trf}-${vars.package_version}-py3-none-any.whl"
      - "deactivate"

  - name: "push_sm"
    help: "Pushes transformer model to Huggingface repository"
    script:
      - ". environments/packaging/bin/activate"
      - "huggingface-cli login"
      - "python3 -m spacy huggingface-hub push packages/${vars.lang}_${vars.package_name_sm}-${vars.package_version}/dist/${vars.lang}_${vars.package_name_sm}-${vars.package_version}-py3-none-any.whl"
      - "deactivate"
