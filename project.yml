title: Training pipeline for Ancient Greek Language Model
description: >
  Reproducible workflows for training the ancient greek spaCy pipeline.

vars:
  lang: "grc"
  config_trf: "transformer"
  config_sm: "cpu"
  model_name_sm: "grc_core_treebanks_sm"
  model_name_trf: "grc_core_treebanks_trf"
  gpu: 0
  package_version: "0.0.0"
  spacy_version: ">=3.0.0"

directories: ["assets", "corpus", "training", "scripts"]

workflows:
  fetch_assets:
    - get_pretraining
    - get_treebanks
  preprocess:
    - install
    - get_treebanks
    - get_pretraining
    - parse
    - convert

commands:
  - name: install
    help: "Install dependencies."
    script:
     - "pip install -r requirements.txt"
    deps:
     - "requirements.txt"
  - name: get_treebanks
    help: "Downloads and cleans treebank data."
    script:
     - "bash scripts/fetch_treebanks.sh"
     - "bash scripts/clean_treebanks.sh"
     - "python3 scripts/join_treebanks.py"
  - name: get_pretraining
    help: "Downloads and cleans pretraining data."
    script:
     - "bash scripts/fetch_pretraining.sh"
     - "bash scripts/clean_pretraining.sh"
  - name: parse
    help: "Parses pretraining dataset."
    script:
      - "python3 scripts/parse_pretraining_corpus.py"
  - name: convert
    help: "Convert CONLL-U files to spacy binaries."
    script:
     - "python3 -m spacy convert assets/treebanks/joint/train.conllu corpus/ --converter conllu -n 10 "
     - "python3 -m spacy convert assets/treebanks/joint/dev.conllu corpus/ --converter conllu -n 10"
     - "python3 -m spacy convert assets/treebanks/joint/test.conllu corpus/ --converter conllu -n 10"

  - name: train_cpu
    help: "Trains a CPU model over the dataset"
    script:
     - "python3 -m spacy train configs/${vars.config_sm}.cfg --output training/${vars.model_name_sm} --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy"
    deps:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "configs/${vars.config_sm}.cfg"
    outputs:
      - "training/${vars.model_name_sm}"

  - name: train_trf
    help: "Finetunes the Bert based transformer model on the treebanks"
    script:
     - "python3 -m spacy train configs/${vars.config_trf}.cfg --output training/${vars.model_name_trf} --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy"
    deps:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "configs/${vars.config_trf}.cfg"
    outputs:
      - "training/${vars.model_name_trf}"

  - name: evaluate_cpu
    help: "Evaluate the cpu model on test data & save the metrics"
    script:
      - "python -m spacy evaluate training/${vars.model_name_sm} corpus/test.spacy --output metrics/${vars.model_name_sm}_${vars.package_version}.json"
    deps:
      - "training/${vars.model_name_sm}"
      - "corpus/test.spacy"
    outputs:
      - "metrics/${vars.model_name_sm}_${vars.package_version}.json"

  - name: evaluate_trf
    help: "Evaluate the Bert based transformer model on test data & save the metrics"
    script:
      - "python -m spacy evaluate training/${vars.model_name_trf} corpus/test.spacy --output metrics/${vars.model_name_trf}_${vars.package_version}.json"
    deps:
      - "training/${vars.model_name_sm}"
      - "corpus/test.spacy"
    outputs:
      - "metrics/${vars.model_name_trf}_${vars.package_version}.json"